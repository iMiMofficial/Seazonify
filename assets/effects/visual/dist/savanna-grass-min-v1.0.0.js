const savannaGrassEffect={name:"Savanna Grass",description:"Advanced realistic savanna grass with natural wind physics, varied grass types, and sophisticated movement patterns",author:"Seazonify",type:"visual",icon:"ðŸŒ¿",thumbnail:"https://cdn.jsdelivr.net/gh/iMiMofficial/Seazonify@main/assets/effects/visual/thumbnails/savanna-grass.webp",license:"https://seazonify.com/license",version:"2.1.0",created:"2025-10-11",category:"desert",tags:["savanna","desert","wind","physics","natural"],css:"\n    .szfy-savanna-grass {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      z-index: 9999;\n      overflow: hidden;\n      background: radial-gradient(ellipse at center, \n        rgba(34, 139, 34, 0.02) 0%, \n        rgba(0, 100, 0, 0.015) 40%, \n        rgba(50, 205, 50, 0.008) 70%, \n        transparent 100%);\n    }\n    \n    /* Advanced Grass Blade System - Smaller & More Realistic */\n    .szfy-grass-blade {\n      position: absolute;\n      bottom: 0;\n      background: linear-gradient(to top, \n        rgba(34, 139, 34, 0.95), \n        rgba(0, 100, 0, 0.85), \n        rgba(50, 205, 50, 0.75), \n        rgba(144, 238, 144, 0.6), \n        rgba(255, 255, 255, 0.4), \n        transparent);\n      border-radius: 0.5px;\n      animation: szfy-grass-sway ease-in-out infinite;\n      opacity: 0;\n      filter: blur(0.2px);\n      transform-origin: bottom center;\n    }\n    \n    .szfy-grass-blade::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: linear-gradient(to top, \n        rgba(50, 205, 50, 0.8), \n        rgba(34, 139, 34, 0.6), \n        rgba(0, 100, 0, 0.4), \n        rgba(144, 238, 144, 0.2), \n        transparent);\n      border-radius: 0.5px;\n      animation: szfy-grass-shimmer 5s ease-in-out infinite;\n    }\n    \n    .szfy-grass-blade::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: linear-gradient(to top, \n        rgba(255, 255, 255, 0.5), \n        rgba(144, 238, 144, 0.3), \n        rgba(50, 205, 50, 0.2), \n        transparent);\n      border-radius: 0.5px;\n      animation: szfy-grass-highlight 7s ease-in-out infinite;\n    }\n    \n    /* Grass Blade Types - Smaller & More Proportionate */\n    .szfy-grass-blade.tall {\n      width: 1.8px;\n      background: linear-gradient(to top, \n        rgba(0, 100, 0, 0.98), \n        rgba(34, 139, 34, 0.92), \n        rgba(50, 205, 50, 0.85), \n        rgba(144, 238, 144, 0.7), \n        rgba(255, 255, 255, 0.5), \n        transparent);\n    }\n    \n    .szfy-grass-blade.medium {\n      width: 1.2px;\n      background: linear-gradient(to top, \n        rgba(34, 139, 34, 0.92), \n        rgba(50, 205, 50, 0.85), \n        rgba(144, 238, 144, 0.7), \n        rgba(255, 255, 255, 0.5), \n        transparent);\n    }\n    \n    .szfy-grass-blade.short {\n      width: 0.8px;\n      background: linear-gradient(to top, \n        rgba(50, 205, 50, 0.92), \n        rgba(144, 238, 144, 0.8), \n        rgba(255, 255, 255, 0.6), \n        transparent);\n    }\n    \n    /* Enhanced Grass Sway Animation - More Natural */\n    @keyframes szfy-grass-sway {\n      0%, 100% {\n        transform: translateX(0) rotate(0deg) scaleY(1);\n        opacity: 0;\n      }\n      15% {\n        opacity: 0.85;\n        transform: translateX(-3px) rotate(-4deg) scaleY(0.99);\n      }\n      35% {\n        opacity: 1;\n        transform: translateX(-6px) rotate(-8deg) scaleY(0.97);\n      }\n      50% {\n        opacity: 1;\n        transform: translateX(-4px) rotate(-5deg) scaleY(0.98);\n      }\n      65% {\n        opacity: 1;\n        transform: translateX(4px) rotate(5deg) scaleY(0.98);\n      }\n      85% {\n        opacity: 0.85;\n        transform: translateX(6px) rotate(8deg) scaleY(0.97);\n      }\n    }\n    \n    @keyframes szfy-grass-shimmer {\n      0%, 100% {\n        opacity: 0.7;\n        transform: scaleY(1);\n      }\n      50% {\n        opacity: 0.95;\n        transform: scaleY(1.01);\n      }\n    }\n    \n    @keyframes szfy-grass-highlight {\n      0%, 100% {\n        opacity: 0.4;\n        transform: scaleY(1);\n      }\n      50% {\n        opacity: 0.7;\n        transform: scaleY(1.005);\n      }\n    }\n    \n    /* Advanced Grass Clusters - Smaller & More Realistic */\n    .szfy-grass-cluster {\n      position: absolute;\n      bottom: 0;\n      background: \n        radial-gradient(ellipse at center, \n          rgba(34, 139, 34, 0.75) 0%, \n          rgba(0, 100, 0, 0.6) 40%, \n          rgba(50, 205, 50, 0.4) 70%, \n          transparent 100%);\n      border-radius: 8px 8px 0 0;\n      animation: szfy-cluster-wave ease-in-out infinite;\n      opacity: 0;\n      filter: blur(0.3px);\n      transform-origin: bottom center;\n    }\n    \n    .szfy-grass-cluster::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: \n        radial-gradient(ellipse at center, \n          rgba(50, 205, 50, 0.65), \n          rgba(34, 139, 34, 0.45), \n          rgba(144, 238, 144, 0.25), \n          transparent);\n      border-radius: 8px 8px 0 0;\n      animation: szfy-cluster-inner 6s ease-in-out infinite;\n    }\n    \n    .szfy-grass-cluster::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: \n        radial-gradient(ellipse at center, \n          rgba(255, 255, 255, 0.35), \n          rgba(144, 238, 144, 0.25), \n          transparent);\n      border-radius: 8px 8px 0 0;\n      animation: szfy-cluster-highlight 8s ease-in-out infinite;\n    }\n    \n    @keyframes szfy-cluster-wave {\n      0%, 100% {\n        transform: translateX(0) scaleY(1) rotate(0deg);\n        opacity: 0;\n      }\n      25% {\n        opacity: 0.75;\n        transform: translateX(-4px) scaleY(0.98) rotate(-2deg);\n      }\n      50% {\n        opacity: 0.9;\n        transform: translateX(-8px) scaleY(0.95) rotate(-4deg);\n      }\n      75% {\n        opacity: 0.75;\n        transform: translateX(4px) scaleY(0.98) rotate(2deg);\n      }\n    }\n    \n    @keyframes szfy-cluster-inner {\n      0%, 100% {\n        opacity: 0.45;\n        transform: scale(1);\n      }\n      50% {\n        opacity: 0.75;\n        transform: scale(1.02);\n      }\n    }\n    \n    @keyframes szfy-cluster-highlight {\n      0%, 100% {\n        opacity: 0.25;\n        transform: scale(1);\n      }\n      50% {\n        opacity: 0.55;\n        transform: scale(1.01);\n      }\n    }\n    \n    /* Enhanced Grass Seeds - Smaller & More Realistic */\n    .szfy-grass-seed {\n      position: absolute;\n      background: radial-gradient(circle, \n        rgba(255, 215, 0, 0.95), \n        rgba(255, 255, 0, 0.8), \n        rgba(255, 215, 0, 0.6), \n        rgba(255, 255, 0, 0.4), \n        transparent);\n      border-radius: 50%;\n      animation: szfy-seed-float ease-in-out infinite;\n      opacity: 0;\n      filter: blur(0.15px);\n    }\n    \n    .szfy-grass-seed::before {\n      content: '';\n      position: absolute;\n      top: 20%;\n      left: 20%;\n      width: 60%;\n      height: 60%;\n      background: radial-gradient(circle, \n        rgba(255, 255, 0, 0.85), \n        rgba(255, 215, 0, 0.65), \n        transparent);\n      border-radius: 50%;\n      animation: szfy-seed-sparkle 4s ease-in-out infinite;\n    }\n    \n    .szfy-grass-seed::after {\n      content: '';\n      position: absolute;\n      top: 10%;\n      left: 10%;\n      width: 80%;\n      height: 80%;\n      background: radial-gradient(circle, \n        rgba(255, 255, 255, 0.45), \n        rgba(255, 215, 0, 0.25), \n        transparent);\n      border-radius: 50%;\n      animation: szfy-seed-glow 5s ease-in-out infinite;\n    }\n    \n    @keyframes szfy-seed-float {\n      0%, 100% {\n        transform: translateY(0) translateX(0) rotate(0deg) scale(1);\n        opacity: 0;\n      }\n      20% {\n        opacity: 0.85;\n        transform: translateY(-8px) translateX(4px) rotate(20deg) scale(1.05);\n      }\n      40% {\n        opacity: 1;\n        transform: translateY(-16px) translateX(8px) rotate(40deg) scale(1.1);\n      }\n      60% {\n        opacity: 1;\n        transform: translateY(-24px) translateX(12px) rotate(60deg) scale(1.05);\n      }\n      80% {\n        opacity: 0.85;\n        transform: translateY(-32px) translateX(16px) rotate(80deg) scale(1);\n      }\n    }\n    \n    @keyframes szfy-seed-sparkle {\n      0%, 100% {\n        opacity: 0.65;\n        transform: scale(1);\n      }\n      50% {\n        opacity: 1;\n        transform: scale(1.2);\n      }\n    }\n    \n    @keyframes szfy-seed-glow {\n      0%, 100% {\n        opacity: 0.35;\n        transform: scale(1);\n      }\n      50% {\n        opacity: 0.75;\n        transform: scale(1.05);\n      }\n    }\n    \n    /* Wind Gust Effects - More Subtle */\n    .szfy-wind-gust {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: linear-gradient(90deg, \n        transparent 0%, \n        rgba(255, 255, 255, 0.015) 20%, \n        rgba(144, 238, 144, 0.02) 50%, \n        rgba(255, 255, 255, 0.015) 80%, \n        transparent 100%);\n      opacity: 0;\n      animation: szfy-wind-gust-flow 10s ease-in-out infinite;\n      pointer-events: none;\n      filter: blur(1.5px);\n    }\n    \n    @keyframes szfy-wind-gust-flow {\n      0%, 100% {\n        opacity: 0;\n        transform: translateX(-100%) skewX(-8deg);\n      }\n      20% {\n        opacity: 0.02;\n        transform: translateX(-50%) skewX(-6deg);\n      }\n      50% {\n        opacity: 0.035;\n        transform: translateX(0%) skewX(-4deg);\n      }\n      80% {\n        opacity: 0.02;\n        transform: translateX(50%) skewX(-2deg);\n      }\n    }\n    \n    /* Enhanced Savanna Background - More Subtle */\n    .szfy-savanna-background {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: \n        radial-gradient(circle at 20% 30%, rgba(34, 139, 34, 0.02) 1px, transparent 1px),\n        radial-gradient(circle at 80% 70%, rgba(0, 100, 0, 0.015) 1px, transparent 1px),\n        radial-gradient(circle at 40% 80%, rgba(50, 205, 50, 0.02) 1px, transparent 1px),\n        radial-gradient(ellipse at center, \n          rgba(34, 139, 34, 0.015) 0%, \n          rgba(0, 100, 0, 0.01) 40%, \n          rgba(50, 205, 50, 0.008) 70%, \n          transparent 100%);\n      background-size: 60px 60px, 90px 90px, 45px 45px, 100% 100%;\n      animation: szfy-savanna-shift 50s ease-in-out infinite;\n      pointer-events: none;\n    }\n    \n    @keyframes szfy-savanna-shift {\n      0%, 100% {\n        opacity: 1;\n        transform: translateX(0) translateY(0) scale(1);\n      }\n      25% {\n        opacity: 1.05;\n        transform: translateX(1px) translateY(-0.5px) scale(1.005);\n      }\n      50% {\n        opacity: 1.1;\n        transform: translateX(2px) translateY(-1px) scale(1.01);\n      }\n      75% {\n        opacity: 1.05;\n        transform: translateX(1px) translateY(-0.5px) scale(1.005);\n      }\n    }\n    \n    /* Responsive Design - Smaller on Mobile */\n    @media (max-width: 768px) {\n      .szfy-grass-blade {\n        width: 0.6px;\n      }\n      \n      .szfy-grass-blade.tall {\n        width: 1.2px;\n      }\n      \n      .szfy-grass-blade.medium {\n        width: 0.8px;\n      }\n      \n      .szfy-grass-cluster {\n        border-radius: 6px 6px 0 0;\n      }\n    }\n  ",html:'\n    <div class="szfy-savanna-grass" id="szfy-savanna-grass-container">\n      <div class="szfy-savanna-background"></div>\n      <div class="szfy-wind-gust"></div>\n    </div>\n  ',js:"\n    (function() {\n      const container = document.getElementById('szfy-savanna-grass-container');\n      if (!container) return;\n      \n      // Enhanced configuration - More elements for density\n      const maxGrassBlades = 180;\n      const maxGrassClusters = 25;\n      const maxGrassSeeds = 40;\n      let currentGrassBlades = 0;\n      let currentGrassClusters = 0;\n      let currentGrassSeeds = 0;\n      \n      // Performance optimization\n      let lastTime = 0;\n      let frameCount = 0;\n      const targetFPS = 30;\n      const frameInterval = 1000 / targetFPS;\n      \n      // Wind simulation - More realistic\n      let windStrength = 0.5;\n      let windDirection = 1;\n      let windChangeTimer = 0;\n      \n      function createGrassBlade() {\n        if (currentGrassBlades >= maxGrassBlades) return;\n        \n        const blade = document.createElement('div');\n        blade.className = 'szfy-grass-blade';\n        \n        // Random grass type with more variety\n        const grassType = Math.random();\n        if (grassType < 0.25) {\n          blade.classList.add('tall');\n        } else if (grassType < 0.65) {\n          blade.classList.add('medium');\n        } else {\n          blade.classList.add('short');\n        }\n        \n        // Random position and timing - Smaller heights for realism\n        const x = Math.random() * window.innerWidth;\n        const height = Math.random() * 50 + 40; // 40-90px (smaller)\n        const duration = Math.random() * 3 + 5; // 5-8 seconds (faster)\n        const delay = Math.random() * 2;\n        \n        // Wind-influenced timing - More subtle\n        const windInfluence = 1 + (windStrength - 0.5) * 0.2;\n        const adjustedDuration = duration * windInfluence;\n        \n        blade.style.left = x + 'px';\n        blade.style.height = height + 'px';\n        blade.style.animationDuration = adjustedDuration + 's';\n        blade.style.animationDelay = delay + 's';\n        \n        container.appendChild(blade);\n        currentGrassBlades++;\n        \n        // Remove blade after animation\n        setTimeout(() => {\n          if (blade.parentNode) {\n            blade.parentNode.removeChild(blade);\n            currentGrassBlades--;\n          }\n        }, (adjustedDuration + delay) * 1000);\n      }\n      \n      function createGrassCluster() {\n        if (currentGrassClusters >= maxGrassClusters) return;\n        \n        const cluster = document.createElement('div');\n        cluster.className = 'szfy-grass-cluster';\n        \n        // Random position and timing - Smaller sizes for realism\n        const x = Math.random() * window.innerWidth;\n        const height = Math.random() * 35 + 50; // 50-85px (smaller)\n        const width = Math.random() * 15 + 12; // 12-27px (smaller)\n        const duration = Math.random() * 4 + 7; // 7-11 seconds\n        const delay = Math.random() * 3;\n        \n        // Wind-influenced timing - More subtle\n        const windInfluence = 1 + (windStrength - 0.5) * 0.15;\n        const adjustedDuration = duration * windInfluence;\n        \n        cluster.style.left = x + 'px';\n        cluster.style.height = height + 'px';\n        cluster.style.width = width + 'px';\n        cluster.style.animationDuration = adjustedDuration + 's';\n        cluster.style.animationDelay = delay + 's';\n        \n        container.appendChild(cluster);\n        currentGrassClusters++;\n        \n        // Remove cluster after animation\n        setTimeout(() => {\n          if (cluster.parentNode) {\n            cluster.parentNode.removeChild(cluster);\n            currentGrassClusters--;\n          }\n        }, (adjustedDuration + delay) * 1000);\n      }\n      \n      function createGrassSeed() {\n        if (currentGrassSeeds >= maxGrassSeeds) return;\n        \n        const seed = document.createElement('div');\n        seed.className = 'szfy-grass-seed';\n        \n        // Random position and timing - Smaller sizes for realism\n        const x = Math.random() * window.innerWidth;\n        const y = Math.random() * (window.innerHeight * 0.6) + 20;\n        const size = Math.random() * 2 + 2; // 2-4px (smaller)\n        const duration = Math.random() * 4 + 7; // 7-11 seconds\n        const delay = Math.random() * 2;\n        \n        // Wind-influenced movement - More subtle\n        const windInfluence = 1 + (windStrength - 0.5) * 0.25;\n        const adjustedDuration = duration * windInfluence;\n        \n        seed.style.left = x + 'px';\n        seed.style.top = y + 'px';\n        seed.style.width = size + 'px';\n        seed.style.height = size + 'px';\n        seed.style.animationDuration = adjustedDuration + 's';\n        seed.style.animationDelay = delay + 's';\n        \n        container.appendChild(seed);\n        currentGrassSeeds++;\n        \n        // Remove seed after animation\n        setTimeout(() => {\n          if (seed.parentNode) {\n            seed.parentNode.removeChild(seed);\n            currentGrassSeeds--;\n          }\n        }, (adjustedDuration + delay) * 1000);\n      }\n      \n      // Wind simulation update - More gradual changes\n      function updateWind() {\n        windChangeTimer += 0.016;\n        \n        if (windChangeTimer > 15) {\n          // Change wind strength and direction more gradually\n          windStrength = Math.max(0.3, Math.min(0.7, windStrength + (Math.random() - 0.5) * 0.2));\n          windDirection = Math.random() < 0.5 ? 1 : -1;\n          windChangeTimer = 0;\n        }\n      }\n      \n      // Main animation loop\n      function animate(currentTime) {\n        const deltaTime = currentTime - lastTime;\n        \n        if (deltaTime >= frameInterval) {\n          frameCount++;\n          lastTime = currentTime;\n          \n          // Update wind simulation\n          updateWind();\n          \n          // Create elements based on wind conditions - More frequent for density\n          if (frameCount % Math.max(8, Math.floor(15 - windStrength * 15)) === 0) {\n            createGrassBlade();\n          }\n          \n          if (frameCount % Math.max(20, Math.floor(35 - windStrength * 25)) === 0) {\n            createGrassCluster();\n          }\n          \n          if (frameCount % Math.max(25, Math.floor(45 - windStrength * 35)) === 0) {\n            createGrassSeed();\n          }\n        }\n        \n        requestAnimationFrame(animate);\n      }\n      \n      // Start animation\n      animate(0);\n      \n      // Initial elements - More initial elements for immediate density\n      setTimeout(() => {\n        // Create initial grass blades\n        for (let i = 0; i < 90; i++) {\n          setTimeout(createGrassBlade, i * 80);\n        }\n        \n        // Create initial grass clusters\n        for (let i = 0; i < 18; i++) {\n          setTimeout(createGrassCluster, i * 600);\n        }\n        \n        // Create initial grass seeds\n        for (let i = 0; i < 20; i++) {\n          setTimeout(createGrassSeed, i * 400);\n        }\n      }, 300);\n      \n      // Performance optimization\n      let visibilityChangeHandler = () => {\n        if (document.hidden) {\n          // Pause animations when tab is not visible\n        } else {\n          // Resume animations when tab becomes visible\n        }\n      };\n      \n      document.addEventListener('visibilitychange', visibilityChangeHandler);\n      \n      // Cleanup function\n      window.szfySavannaGrassCleanup = function() {\n        if (container) {\n          container.innerHTML = '';\n          currentGrassBlades = 0;\n          currentGrassClusters = 0;\n          currentGrassSeeds = 0;\n        }\n        \n        document.removeEventListener('visibilitychange', visibilityChangeHandler);\n      };\n    })();\n  "};"undefined"!=typeof window&&window.SeazonifyController&&window.SeazonifyController.injectVisualEffect(savannaGrassEffect),"undefined"!=typeof module&&module.exports&&(module.exports=savannaGrassEffect);
